xlim(0,13) +
labs(x='Meses', y='% de vuelos que ganaron tiempo en el aire',
title='Tiempo ganado en el aire de las Aerolineas US',
subtitle='Vuelos de septiembre 2013')
geom_point(aes(x=media, y=total, fill= month)
title='Tiempo ganado en el aire de las Aerolineas US',
df_1 <- group_by(flights, month)
df_2 <- summarise(df_1, nvuelos = n(),
nganado=sum((arr_delay<0)<(dep_delay>0), na.rm=TRUE),
total =(nganado/nvuelos)*100,
Media=mean(arr_delay, na.rm=TRUE),
Mediana=median(arr_delay, na.rm=TRUE),
DesvEstandar=sd(arr_delay, na.rm=TRUE),
DistInter=IQR(arr_delay, na.rm=TRUE))
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='% de vuelos que ganaron tiempo en el aire',
title='Tiempo ganado en el aire de las Aerolineas US',
subtitle='Vuelos de septiembre 2013') +
geom_point(aes(x=media, y=total, fill= month)
geom_point(aes(x=media, y=total, fill= 'Red')
=
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='% de vuelos que ganaron tiempo en el aire',
title='Tiempo ganado en el aire de las Aerolineas US',
subtitle='Vuelos de septiembre 2013') +
geom_point(data=df_2,aes(x=media, y=total, fill= 'Red')
geom_point(data=df_2,aes(x=media, y=total, fill= 'Red')
ggplot(data=df_2) + geom_bar(aes(x=media, y=total, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='% de vuelos que ganaron tiempo en el aire',
title='Tiempo ganado en el aire de las Aerolineas US',
subtitle='Vuelos de septiembre 2013')
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
geom_point(data=df_2,aes(x=Media, y=total, fill= 'Red')
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
geom_point(data=df_2,aes(x=Media, y=total, fill= 'Red')
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
geom_point(data=df_2, mapping=aes(x=Media, y=total, fill= 'Red')
ggplot(data=df_2) + geom_bar(aes(x=Media, y=total, fill= month)
ggplot(data=df_2) + geom_bar(aes(x=Media, y=total, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='% de vuelos que ganaron tiempo en el aire',
title='Tiempo ganado en el aire de las Aerolineas US',
subtitle='Vuelos de septiembre 2013')
ggplot(data=df_2) + geom_bar(aes(x=month, y=total, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='% de vuelos que ganaron tiempo en el aire',
title='Tiempo ganado en el aire de las Aerolineas US',
subtitle='Vuelos de septiembre 2013')
ggplot(data=df_2) + geom_bar(aes(x=month, y=Media, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='% de vuelos que ganaron tiempo en el aire',
title='Tiempo ganado en el aire de las Aerolineas US',
subtitle='Vuelos de septiembre 2013')
ggplot(data=df_2) + geom_bar(aes(x=month, y=Media, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='Media de vuelos que ganaron tiempo en el aire',
title='Media de tiempo ganado en el aire x Mes',
subtitle='Vuelos de septiembre 2013')
ggplot(data=df_2) + geom_bar(aes(x=month, y=Media, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='Media de tiempo de vuelos tardíos',
title='Promedio de tardanza en Aeropuertos US',
subtitle='Vuelos de septiembre 2013')
ggplot(data=df_2) + geom_bar(aes(x=month, y=Media, fill= month)
,stat = 'identity') +
xlim(0,13) +
labs(x='Meses', y='Media de tiempo de vuelos tardíos en la llegada',
title='Promedio de tardanza en Aeropuertos US',
subtitle='Vuelos de septiembre 2013')
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/Entrega6.r", echo=TRUE)
library(ggridges)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/Entrega6.r", echo=TRUE)
library(dplyr)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/Entrega6.r", echo=TRUE)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/clase7.R", echo=TRUE)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/clase7.R", echo=TRUE)
mod <- lm(y ~ x, data=sim1)
grid <- data_grid(sim1, x)
grid <- add_predictions(grid, mod)
View(grid)
ggplot(data=sim1) +
geom_point(aes(x,y)) +
geom_line(data=grid, aes(x,pred)) +
labs(title="Modelo lineal ajustado relacionando y sobre x",
subtitle="Con línea de predicciones")
ggplot(data=sim1) +
geom_point(data=grid, aes(y,resid)) +
labs(title="Residuos en función de Y")
grid <- sim1 %>% add_residuals(mod)
l
ggplot(data=sim1) +
geom_point(data=grid, aes(y,resid)) +
labs(title="Residuos en función de Y")
ggplot(data=sim1) +
geom_point(data=grid, aes(x,resid)) +
labs(title="Residuos en función de X")
plot(rnorm(30, mean = 15.50425, sd = 6.372218), main = "n = 30",
xlab = "", prob = TRUE)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/Entrega6.r", echo=TRUE)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/Entrega6.r", echo=TRUE)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/Entrega6.r", echo=TRUE)
setwd('C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6')
df = read_csv('../../data/arbolado-publico-lineal-2017-2018.csv')
colnames(df)
areas = read_csv('area_comunas.csv')
colnames(df)
mod <- lm(altura_arbol ~ diametro_altura_pecho, data=df)
grid <- data_grid(df, diametro_altura_pecho)
View(grid)
grid <- add_predictions(grid, mod)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando y sobre x",
subtitle="Con línea de predicciones")
glimpse(df)
df %>%
summarise(distintos=n_distinct(df), total=n())
unique(df$manzana)
problems(df)
df %>% summarise(cant_arboles = n(),
na_altura = sum(is.na(altura_arbol)),
na_diametro = sum(is.na(diametro_altura_pecho))
)
ggplot(data = df,mapping = aes(x=altura_arbol)) + geom_histogram() +
labs(title="Histograma de alturas")
df %>%
filter(diametro_altura_pecho==0) %>%
summarize(ceros_diametro = n())
df <- df %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
diametro_altura_pecho==0,
NA))
# Diámetros cero no tiene sentido porque están medidos en centímetros
df %>%
filter(diametro_altura_pecho==0) %>%
summarize(ceros_diametro = n())
# Decidimos reemplazar estos valores por NA.
df <- df %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
diametro_altura_pecho==0,
NA))
# Reemplacemos esos valores faltantes por el valor medio y agrupando por especie
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
is.na(diametro_altura_pecho),
median(diametro_altura_pecho, na.rm = TRUE))) %>%
ungroup()
# Usemos el mismo criterio para la altura.
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(altura_arbol
= replace(altura_arbol,
is.na(altura_arbol),
median(altura_arbol, na.rm = TRUE))) %>%
ungroup()
mod <- lm(altura_arbol ~ diametro_altura_pecho, data=df)
grid <- data_grid(df, diametro_altura_pecho)
grid <- add_predictions(grid, mod)
View(df)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando y sobre x",
subtitle="Con línea de predicciones")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
x="Altura del Árbol",
y="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(log(diametro_altura_pecho),pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
df %>%
filter(diametro_altura_pecho>150) %>%
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
df <- df %>%
filter(diametro_altura_pecho>150)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,log(pred))) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(log(diametro_altura_pecho),log(pred))) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,log(pred))) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
mod <- lm(log(altura_arbol) ~ log(diametro_altura_pecho), data=df)
grid <- data_grid(df, log(diametro_altura_pecho))
grid <- add_predictions(grid, mod)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
View(df)
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
View(grid)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(log(diametro_altura_pecho),pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
mod <- lm(log(altura_arbol) ~ log(diametro_altura_pecho), data=df)
grid <- data_grid(df, log(diametro_altura_pecho))
grid <- add_predictions(grid, mod)
View(grid)
View(mod)
View(mod)
summarise(mod)
summary(mod)
View(grid)
grid <- add_predictions(grid, mod)
mod <- lm(log(altura_arbol) ~ diametro_altura_pecho, data=df)
grid <- data_grid(df, log(diametro_altura_pecho))
grid <- add_predictions(grid, mod)
df = read_csv('../../data/arbolado-publico-lineal-2017-2018.csv')
# Diámetros cero no tiene sentido porque están medidos en centímetros
df %>%
filter(diametro_altura_pecho==0) %>%
summarize(ceros_diametro = n())
# Decidimos reemplazar estos valores por NA.
df <- df %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
diametro_altura_pecho==0,
NA))
# Reemplacemos esos valores faltantes por el valor medio y agrupando por especie
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
is.na(diametro_altura_pecho),
median(diametro_altura_pecho, na.rm = TRUE))) %>%
ungroup()
# Usemos el mismo criterio para la altura.
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(altura_arbol
= replace(altura_arbol,
is.na(altura_arbol),
median(altura_arbol, na.rm = TRUE))) %>%
ungroup()
mod <- lm(log(altura_arbol) ~ diametro_altura_pecho, data=df)
grid <- data_grid(df, log(diametro_altura_pecho))
grid <- add_predictions(grid, mod)
mod <- lm(log(altura_arbol) ~ diametro_altura_pecho, data=df)
grid <- data_grid(df, diametro_altura_pecho)
grid <- add_predictions(grid, mod)
df <- df %>%
filter(diametro_altura_pecho>150)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(log(diametro_altura_pecho),pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
mod <- lm(log(altura_arbol) ~ log(diametro_altura_pecho), data=df)
grid <- data_grid(df, diametro_altura_pecho)
grid <- add_predictions(grid, mod)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
mod <- lm(altura_arbol ~ log(diametro_altura_pecho), data=df)
grid <- data_grid(df, diametro_altura_pecho)
grid <- add_predictions(grid, mod)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
df = read_csv('../../data/arbolado-publico-lineal-2017-2018.csv')
# Diámetros cero no tiene sentido porque están medidos en centímetros
df %>%
filter(diametro_altura_pecho==0) %>%
summarize(ceros_diametro = n())
# Decidimos reemplazar estos valores por NA.
df <- df %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
diametro_altura_pecho==0,
NA))
# Reemplacemos esos valores faltantes por el valor medio y agrupando por especie
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
is.na(diametro_altura_pecho),
median(diametro_altura_pecho, na.rm = TRUE))) %>%
ungroup()
# Usemos el mismo criterio para la altura.
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(altura_arbol
= replace(altura_arbol,
is.na(altura_arbol),
median(altura_arbol, na.rm = TRUE))) %>%
ungroup()
mod <- lm(altura_arbol ~ log(diametro_altura_pecho), data=df)
grid <- data_grid(df, diametro_altura_pecho)
grid <- add_predictions(grid, mod)
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol") +
ylim(0,45)
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/clase7.R", echo=TRUE)
################################################################################
#Tarea 4
colores <- ggplot(diamonds, aes(x=color, y=price, color=color) ) + geom_col()
corte <- ggplot(diamonds, aes(x=cut, y=price, color=cut) ) + geom_col()
claridad <- ggplot(diamonds, aes(x=clarity, y=price, color=clarity) ) + geom_col()
plot_grid(colores,corte,claridad)
colores <- ggplot(diamonds, aes(x=color, y=price, color=color) ) + geom_violin() +stat_summary(fun = "mean",
geom = "crossbar",
width = 0.5,
colour = "red")
corte <- ggplot(diamonds, aes(x=cut, y=price, color=cut) ) + geom_violin()+ stat_summary(fun = "mean",
geom = "crossbar",
width = 0.5,
colour = "red")
ggplot(diamonds, aes(x=clarity, y=cut, color=clarity) ) + geom_point()
plot_grid(colores,corte,claridad)
ggplot(diamonds, aes(x=clarity, y=cut, color=clarity) ) + geom_point()
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) + geom_violin() +stat_summary(fun = "mean",
geom = "crossbar",
width = 0.5,
colour = "red")
ggplot(data=df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) + geom_violin() +stat_summary(fun = "mean",
geom = "crossbar",
width = 0.5,
colour = "red")
grafic <- ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) + geom_violin() +stat_summary(fun = "mean",
geom = "crossbar",
width = 0.5,
colour = "red")
colores <- ggplot(diamonds, aes(x=color, y=price, color=color) ) + geom_violin() +stat_summary(fun = "mean",
geom = "crossbar",
width = 0.5,
colour = "red")
ggplot(diamonds, aes(x=clarity, y=cut, color=clarity) ) + geom_point()
source("C:/Users/nicol/OneDrive/Escritorio/Facultad/Introducccion a Ciencia de Datos/R-unsam/1er Parcial/R/Entrega6/Entrega6.r", echo=TRUE)
# Diámetros cero no tiene sentido porque están medidos en centímetros
df %>%
filter(diametro_altura_pecho==0) %>%
summarize(ceros_diametro = n())
# Decidimos reemplazar estos valores por NA.
df <- df %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
diametro_altura_pecho==0,
NA))
# Reemplacemos esos valores faltantes por el valor medio y agrupando por especie
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(diametro_altura_pecho
= replace(diametro_altura_pecho,
is.na(diametro_altura_pecho),
median(diametro_altura_pecho, na.rm = TRUE))) %>%
ungroup()
# Usemos el mismo criterio para la altura.
df <- df %>%
group_by(nombre_cientifico) %>%
mutate(altura_arbol
= replace(altura_arbol,
is.na(altura_arbol),
median(altura_arbol, na.rm = TRUE))) %>%
ungroup()
mod <- lm(altura_arbol ~ log(diametro_altura_pecho), data=df)
grid <- data_grid(df, diametro_altura_pecho)
grid <- add_predictions(grid, mod)
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) + geom_violin() +stat_summary(fun = "mean",
geom = "crossbar",
width = 0.5,
colour = "red")
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) +
geom_violin(fill="gray") +
stat_summary(fun = "mean",geom = "crossbar", width = 0.5, colour = "red")
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) +
geom_violin(fill="gray") +
stat_summary(fun = "mean",geom = "crossbar", width = 0.5, colour = "red")
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) +
geom_violin(fill="DarkBlue") +
stat_summary(fun = "mean",geom = "crossbar", width = 0.5, colour = "red")
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol, color=altura_arbol) ) +
geom_violin(fill="DarkBlue") +
stat_summary(fun = "mean",geom = "crossbar", width = 0.5)
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol) ) +
geom_violin(fill="DarkBlue") +
stat_summary(fun = "mean",geom = "crossbar", width = 0.5,colour = "red")
ggplot(data=df) +
geom_point(aes(diametro_altura_pecho,altura_arbol,color=altura_arbol)) +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol") +
ylim(0,45)
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol) ) +
geom_violin(fill="DarkBlue") +
stat_summary(fun = "mean",geom = "crossbar", width = 0.5,colour = "red") +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Modelo lineal ajustado relacionando Ancho sobre Altura de un Árbol",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol") +
ylim(0,40)
ggplot(df, aes(x=diametro_altura_pecho, y=altura_arbol) ) +
geom_violin(fill="DarkBlue") +
stat_summary(fun = "mean",geom = "crossbar", width = 0.5,colour = "red") +
geom_line(data=grid, aes(diametro_altura_pecho,pred)) +
labs(title="Amplitud del modelo ajustado con el promedio de ancho por altura",
subtitle="Con línea de predicciones",
y="Altura del Árbol",
x="Ancho del Árbol") +
ylim(0,40)
